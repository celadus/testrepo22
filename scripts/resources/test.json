{
  "swagger": "2.0",
  "info": {
    "title": "sakila",
    "description": "Insert comments here",
    "version": "v1"
  },
  "host": "portal.camena.com:48080",
  "schemes": [
    "http"
  ],
  "basePath": "/CALiveAPICreator/rest/default/etwxw/v1",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "tags": [
    {
      "name": "Table main:actor",
      "description": ""
    },
    {
      "name": "Table main:address",
      "description": ""
    },
    {
      "name": "Table main:category",
      "description": ""
    },
    {
      "name": "Table main:city",
      "description": ""
    },
    {
      "name": "Table main:country",
      "description": ""
    },
    {
      "name": "Table main:customer",
      "description": ""
    },
    {
      "name": "Table main:film",
      "description": ""
    },
    {
      "name": "Table main:film_actor",
      "description": ""
    },
    {
      "name": "Table main:film_category",
      "description": ""
    },
    {
      "name": "Table main:film_text",
      "description": ""
    },
    {
      "name": "Table main:inventory",
      "description": ""
    },
    {
      "name": "Table main:language",
      "description": ""
    },
    {
      "name": "Table main:payment",
      "description": ""
    },
    {
      "name": "Table main:rental",
      "description": ""
    },
    {
      "name": "Table main:staff",
      "description": ""
    },
    {
      "name": "Table main:store",
      "description": ""
    },
    {
      "name": "View main:actor_info",
      "description": ""
    },
    {
      "name": "View main:customer_list",
      "description": ""
    },
    {
      "name": "View main:film_list",
      "description": ""
    },
    {
      "name": "View main:nicer_but_slower_film_list",
      "description": ""
    },
    {
      "name": "View main:sales_by_film_category",
      "description": ""
    },
    {
      "name": "View main:sales_by_store",
      "description": ""
    },
    {
      "name": "View main:staff_list",
      "description": ""
    },
    {
      "name": "Procedure main:film_in_stock",
      "description": ""
    },
    {
      "name": "Procedure main:film_not_in_stock",
      "description": ""
    },
    {
      "name": "Procedure main:get_customer_balance",
      "description": ""
    },
    {
      "name": "Procedure main:inventory_held_by_customer",
      "description": ""
    },
    {
      "name": "Procedure main:inventory_in_stock",
      "description": ""
    },
    {
      "name": "Procedure main:rewards_report",
      "description": ""
    }
  ],
  "paths": {
    "/main:actor/{actor_id}": {
      "parameters": [
        {
          "name": "actor_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:actor"
        ],
        "summary": "Retrieve a specific main:actor object",
        "description": "# Retrieve a specific main:actor object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:actor objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:actor"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:actor"
        ],
        "summary": "Update a specific main:actor object",
        "description": "# Update a specific main:actor object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:actor"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:actor objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:actor"
        ],
        "summary": "Delete a specific main:actor object",
        "description": "# Delete a specific main:actor object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:actor objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:actor": {
      "get": {
        "tags": [
          "Table main:actor"
        ],
        "summary": "Retrieve zero or more main:actor objects",
        "description": "# Retrieve zero or more main:actor objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:actor objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:actor"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:actor"
        ],
        "summary": "Insert zero or more main:actor objects",
        "description": "# Insert zero or more main:actor objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:actor"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:actor objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:actor"
        ],
        "summary": "Update zero or more main:actor objects",
        "description": "# Update zero or more main:actor objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:actor"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:actor objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:address/{address_id}": {
      "parameters": [
        {
          "name": "address_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:address"
        ],
        "summary": "Retrieve a specific main:address object",
        "description": "# Retrieve a specific main:address object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:address objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:address"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:address"
        ],
        "summary": "Update a specific main:address object",
        "description": "# Update a specific main:address object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:address"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:address objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:address"
        ],
        "summary": "Delete a specific main:address object",
        "description": "# Delete a specific main:address object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:address objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:address": {
      "get": {
        "tags": [
          "Table main:address"
        ],
        "summary": "Retrieve zero or more main:address objects",
        "description": "# Retrieve zero or more main:address objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:address objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:address"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:address"
        ],
        "summary": "Insert zero or more main:address objects",
        "description": "# Insert zero or more main:address objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:address"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:address objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:address"
        ],
        "summary": "Update zero or more main:address objects",
        "description": "# Update zero or more main:address objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:address"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:address objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:category/{category_id}": {
      "parameters": [
        {
          "name": "category_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:category"
        ],
        "summary": "Retrieve a specific main:category object",
        "description": "# Retrieve a specific main:category object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:category objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:category"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:category"
        ],
        "summary": "Update a specific main:category object",
        "description": "# Update a specific main:category object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:category"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:category objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:category"
        ],
        "summary": "Delete a specific main:category object",
        "description": "# Delete a specific main:category object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:category objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:category": {
      "get": {
        "tags": [
          "Table main:category"
        ],
        "summary": "Retrieve zero or more main:category objects",
        "description": "# Retrieve zero or more main:category objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:category objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:category"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:category"
        ],
        "summary": "Insert zero or more main:category objects",
        "description": "# Insert zero or more main:category objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:category"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:category objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:category"
        ],
        "summary": "Update zero or more main:category objects",
        "description": "# Update zero or more main:category objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:category"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:category objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:city/{city_id}": {
      "parameters": [
        {
          "name": "city_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:city"
        ],
        "summary": "Retrieve a specific main:city object",
        "description": "# Retrieve a specific main:city object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:city objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:city"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:city"
        ],
        "summary": "Update a specific main:city object",
        "description": "# Update a specific main:city object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:city"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:city objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:city"
        ],
        "summary": "Delete a specific main:city object",
        "description": "# Delete a specific main:city object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:city objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:city": {
      "get": {
        "tags": [
          "Table main:city"
        ],
        "summary": "Retrieve zero or more main:city objects",
        "description": "# Retrieve zero or more main:city objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:city objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:city"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:city"
        ],
        "summary": "Insert zero or more main:city objects",
        "description": "# Insert zero or more main:city objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:city"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:city objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:city"
        ],
        "summary": "Update zero or more main:city objects",
        "description": "# Update zero or more main:city objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:city"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:city objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:country/{country_id}": {
      "parameters": [
        {
          "name": "country_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:country"
        ],
        "summary": "Retrieve a specific main:country object",
        "description": "# Retrieve a specific main:country object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:country objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:country"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:country"
        ],
        "summary": "Update a specific main:country object",
        "description": "# Update a specific main:country object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:country"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:country objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:country"
        ],
        "summary": "Delete a specific main:country object",
        "description": "# Delete a specific main:country object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:country objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:country": {
      "get": {
        "tags": [
          "Table main:country"
        ],
        "summary": "Retrieve zero or more main:country objects",
        "description": "# Retrieve zero or more main:country objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:country objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:country"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:country"
        ],
        "summary": "Insert zero or more main:country objects",
        "description": "# Insert zero or more main:country objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:country"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:country objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:country"
        ],
        "summary": "Update zero or more main:country objects",
        "description": "# Update zero or more main:country objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:country"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:country objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:customer/{customer_id}": {
      "parameters": [
        {
          "name": "customer_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:customer"
        ],
        "summary": "Retrieve a specific main:customer object",
        "description": "# Retrieve a specific main:customer object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:customer objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:customer"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:customer"
        ],
        "summary": "Update a specific main:customer object",
        "description": "# Update a specific main:customer object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:customer"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:customer objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:customer"
        ],
        "summary": "Delete a specific main:customer object",
        "description": "# Delete a specific main:customer object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:customer objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:customer": {
      "get": {
        "tags": [
          "Table main:customer"
        ],
        "summary": "Retrieve zero or more main:customer objects",
        "description": "# Retrieve zero or more main:customer objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:customer objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:customer"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:customer"
        ],
        "summary": "Insert zero or more main:customer objects",
        "description": "# Insert zero or more main:customer objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:customer"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:customer objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:customer"
        ],
        "summary": "Update zero or more main:customer objects",
        "description": "# Update zero or more main:customer objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:customer"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:customer objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film/{film_id}": {
      "parameters": [
        {
          "name": "film_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:film"
        ],
        "summary": "Retrieve a specific main:film object",
        "description": "# Retrieve a specific main:film object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:film"
        ],
        "summary": "Update a specific main:film object",
        "description": "# Update a specific main:film object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:film"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:film"
        ],
        "summary": "Delete a specific main:film object",
        "description": "# Delete a specific main:film object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film": {
      "get": {
        "tags": [
          "Table main:film"
        ],
        "summary": "Retrieve zero or more main:film objects",
        "description": "# Retrieve zero or more main:film objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:film objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:film"
        ],
        "summary": "Insert zero or more main:film objects",
        "description": "# Insert zero or more main:film objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:film objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:film"
        ],
        "summary": "Update zero or more main:film objects",
        "description": "# Update zero or more main:film objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film_actor/{actor_id}~{film_id}": {
      "parameters": [
        {
          "name": "actor_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        },
        {
          "name": "film_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:film_actor"
        ],
        "summary": "Retrieve a specific main:film_actor object",
        "description": "# Retrieve a specific main:film_actor object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_actor objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_actor"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:film_actor"
        ],
        "summary": "Update a specific main:film_actor object",
        "description": "# Update a specific main:film_actor object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:film_actor"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_actor objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:film_actor"
        ],
        "summary": "Delete a specific main:film_actor object",
        "description": "# Delete a specific main:film_actor object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_actor objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film_actor": {
      "get": {
        "tags": [
          "Table main:film_actor"
        ],
        "summary": "Retrieve zero or more main:film_actor objects",
        "description": "# Retrieve zero or more main:film_actor objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:film_actor objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_actor"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:film_actor"
        ],
        "summary": "Insert zero or more main:film_actor objects",
        "description": "# Insert zero or more main:film_actor objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_actor"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:film_actor objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:film_actor"
        ],
        "summary": "Update zero or more main:film_actor objects",
        "description": "# Update zero or more main:film_actor objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_actor"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_actor objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film_category/{film_id}~{category_id}": {
      "parameters": [
        {
          "name": "film_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        },
        {
          "name": "category_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:film_category"
        ],
        "summary": "Retrieve a specific main:film_category object",
        "description": "# Retrieve a specific main:film_category object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_category objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_category"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:film_category"
        ],
        "summary": "Update a specific main:film_category object",
        "description": "# Update a specific main:film_category object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:film_category"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_category objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:film_category"
        ],
        "summary": "Delete a specific main:film_category object",
        "description": "# Delete a specific main:film_category object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_category objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film_category": {
      "get": {
        "tags": [
          "Table main:film_category"
        ],
        "summary": "Retrieve zero or more main:film_category objects",
        "description": "# Retrieve zero or more main:film_category objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:film_category objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_category"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:film_category"
        ],
        "summary": "Insert zero or more main:film_category objects",
        "description": "# Insert zero or more main:film_category objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_category"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:film_category objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:film_category"
        ],
        "summary": "Update zero or more main:film_category objects",
        "description": "# Update zero or more main:film_category objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_category"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_category objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film_text/{film_id}": {
      "parameters": [
        {
          "name": "film_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:film_text"
        ],
        "summary": "Retrieve a specific main:film_text object",
        "description": "# Retrieve a specific main:film_text object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_text objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_text"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:film_text"
        ],
        "summary": "Update a specific main:film_text object",
        "description": "# Update a specific main:film_text object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:film_text"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_text objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:film_text"
        ],
        "summary": "Delete a specific main:film_text object",
        "description": "# Delete a specific main:film_text object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_text objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film_text": {
      "get": {
        "tags": [
          "Table main:film_text"
        ],
        "summary": "Retrieve zero or more main:film_text objects",
        "description": "# Retrieve zero or more main:film_text objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:film_text objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_text"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:film_text"
        ],
        "summary": "Insert zero or more main:film_text objects",
        "description": "# Insert zero or more main:film_text objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_text"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:film_text objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:film_text"
        ],
        "summary": "Update zero or more main:film_text objects",
        "description": "# Update zero or more main:film_text objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_text"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_text objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:inventory/{inventory_id}": {
      "parameters": [
        {
          "name": "inventory_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:inventory"
        ],
        "summary": "Retrieve a specific main:inventory object",
        "description": "# Retrieve a specific main:inventory object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:inventory objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:inventory"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:inventory"
        ],
        "summary": "Update a specific main:inventory object",
        "description": "# Update a specific main:inventory object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:inventory"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:inventory objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:inventory"
        ],
        "summary": "Delete a specific main:inventory object",
        "description": "# Delete a specific main:inventory object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:inventory objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:inventory": {
      "get": {
        "tags": [
          "Table main:inventory"
        ],
        "summary": "Retrieve zero or more main:inventory objects",
        "description": "# Retrieve zero or more main:inventory objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:inventory objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:inventory"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:inventory"
        ],
        "summary": "Insert zero or more main:inventory objects",
        "description": "# Insert zero or more main:inventory objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:inventory"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:inventory objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:inventory"
        ],
        "summary": "Update zero or more main:inventory objects",
        "description": "# Update zero or more main:inventory objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:inventory"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:inventory objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:language/{language_id}": {
      "parameters": [
        {
          "name": "language_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:language"
        ],
        "summary": "Retrieve a specific main:language object",
        "description": "# Retrieve a specific main:language object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:language objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:language"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:language"
        ],
        "summary": "Update a specific main:language object",
        "description": "# Update a specific main:language object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:language"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:language objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:language"
        ],
        "summary": "Delete a specific main:language object",
        "description": "# Delete a specific main:language object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:language objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:language": {
      "get": {
        "tags": [
          "Table main:language"
        ],
        "summary": "Retrieve zero or more main:language objects",
        "description": "# Retrieve zero or more main:language objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:language objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:language"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:language"
        ],
        "summary": "Insert zero or more main:language objects",
        "description": "# Insert zero or more main:language objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:language"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:language objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:language"
        ],
        "summary": "Update zero or more main:language objects",
        "description": "# Update zero or more main:language objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:language"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:language objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:payment/{payment_id}": {
      "parameters": [
        {
          "name": "payment_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:payment"
        ],
        "summary": "Retrieve a specific main:payment object",
        "description": "# Retrieve a specific main:payment object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:payment objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:payment"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:payment"
        ],
        "summary": "Update a specific main:payment object",
        "description": "# Update a specific main:payment object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:payment"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:payment objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:payment"
        ],
        "summary": "Delete a specific main:payment object",
        "description": "# Delete a specific main:payment object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:payment objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:payment": {
      "get": {
        "tags": [
          "Table main:payment"
        ],
        "summary": "Retrieve zero or more main:payment objects",
        "description": "# Retrieve zero or more main:payment objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:payment objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:payment"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:payment"
        ],
        "summary": "Insert zero or more main:payment objects",
        "description": "# Insert zero or more main:payment objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:payment"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:payment objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:payment"
        ],
        "summary": "Update zero or more main:payment objects",
        "description": "# Update zero or more main:payment objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:payment"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:payment objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:rental/{rental_id}": {
      "parameters": [
        {
          "name": "rental_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:rental"
        ],
        "summary": "Retrieve a specific main:rental object",
        "description": "# Retrieve a specific main:rental object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:rental objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:rental"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:rental"
        ],
        "summary": "Update a specific main:rental object",
        "description": "# Update a specific main:rental object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:rental"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:rental objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:rental"
        ],
        "summary": "Delete a specific main:rental object",
        "description": "# Delete a specific main:rental object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:rental objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:rental": {
      "get": {
        "tags": [
          "Table main:rental"
        ],
        "summary": "Retrieve zero or more main:rental objects",
        "description": "# Retrieve zero or more main:rental objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:rental objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:rental"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:rental"
        ],
        "summary": "Insert zero or more main:rental objects",
        "description": "# Insert zero or more main:rental objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:rental"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:rental objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:rental"
        ],
        "summary": "Update zero or more main:rental objects",
        "description": "# Update zero or more main:rental objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:rental"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:rental objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:staff/{staff_id}": {
      "parameters": [
        {
          "name": "staff_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:staff"
        ],
        "summary": "Retrieve a specific main:staff object",
        "description": "# Retrieve a specific main:staff object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:staff objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:staff"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:staff"
        ],
        "summary": "Update a specific main:staff object",
        "description": "# Update a specific main:staff object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:staff"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:staff objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:staff"
        ],
        "summary": "Delete a specific main:staff object",
        "description": "# Delete a specific main:staff object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:staff objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:staff": {
      "get": {
        "tags": [
          "Table main:staff"
        ],
        "summary": "Retrieve zero or more main:staff objects",
        "description": "# Retrieve zero or more main:staff objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:staff objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:staff"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:staff"
        ],
        "summary": "Insert zero or more main:staff objects",
        "description": "# Insert zero or more main:staff objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:staff"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:staff objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:staff"
        ],
        "summary": "Update zero or more main:staff objects",
        "description": "# Update zero or more main:staff objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:staff"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:staff objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:store/{store_id}": {
      "parameters": [
        {
          "name": "store_id",
          "in": "path",
          "required": true,
          "type": "number",
          "format": "int32"
        }
      ],
      "get": {
        "tags": [
          "Table main:store"
        ],
        "summary": "Retrieve a specific main:store object",
        "description": "# Retrieve a specific main:store object",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:store objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:store"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:store"
        ],
        "summary": "Update a specific main:store object",
        "description": "# Update a specific main:store object",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/main:store"
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:store objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Table main:store"
        ],
        "summary": "Delete a specific main:store object",
        "description": "# Delete a specific main:store object",
        "parameters": [
          {
            "$ref": "#/parameters/checksum"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/ignoredeleted"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:store objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "404": {
            "description": "error return, when object does not exist or not visible due to security.  See ignoredeleted parameter to have this be a 200 response instead.",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:store": {
      "get": {
        "tags": [
          "Table main:store"
        ],
        "summary": "Retrieve zero or more main:store objects",
        "description": "# Retrieve zero or more main:store objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:store objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:store"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Table main:store"
        ],
        "summary": "Insert zero or more main:store objects",
        "description": "# Insert zero or more main:store objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:store"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "201": {
            "description": "Zero or one main:store objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      },
      "put": {
        "tags": [
          "Table main:store"
        ],
        "summary": "Update zero or more main:store objects",
        "description": "# Update zero or more main:store objects",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:store"
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/txsummary"
          },
          {
            "$ref": "#/parameters/rulesummary"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:store objects",
            "schema": {
              "type": "object",
              "properties": {
                "statusCode": {
                  "type": "integer",
                  "format": "int32"
                },
                "txsummary": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/unspecifiedArrayItemObject"
                  }
                }
              },
              "required": [
                "statusCode"
              ]
            }
          },
          "409": {
            "description": "error return, typically for optimistic locking (checksum mismatch)",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:actor_info": {
      "get": {
        "tags": [
          "View main:actor_info"
        ],
        "summary": "Retrieve zero or more main:actor_info objects",
        "description": "# Retrieve zero or more main:actor_info objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:actor_info objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:actor_info"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:customer_list": {
      "get": {
        "tags": [
          "View main:customer_list"
        ],
        "summary": "Retrieve zero or more main:customer_list objects",
        "description": "# Retrieve zero or more main:customer_list objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:customer_list objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:customer_list"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film_list": {
      "get": {
        "tags": [
          "View main:film_list"
        ],
        "summary": "Retrieve zero or more main:film_list objects",
        "description": "# Retrieve zero or more main:film_list objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:film_list objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:film_list"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:nicer_but_slower_film_list": {
      "get": {
        "tags": [
          "View main:nicer_but_slower_film_list"
        ],
        "summary": "Retrieve zero or more main:nicer_but_slower_film_list objects",
        "description": "# Retrieve zero or more main:nicer_but_slower_film_list objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:nicer_but_slower_film_list objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:nicer_but_slower_film_list"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:sales_by_film_category": {
      "get": {
        "tags": [
          "View main:sales_by_film_category"
        ],
        "summary": "Retrieve zero or more main:sales_by_film_category objects",
        "description": "# Retrieve zero or more main:sales_by_film_category objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:sales_by_film_category objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:sales_by_film_category"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:sales_by_store": {
      "get": {
        "tags": [
          "View main:sales_by_store"
        ],
        "summary": "Retrieve zero or more main:sales_by_store objects",
        "description": "# Retrieve zero or more main:sales_by_store objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:sales_by_store objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:sales_by_store"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:staff_list": {
      "get": {
        "tags": [
          "View main:staff_list"
        ],
        "summary": "Retrieve zero or more main:staff_list objects",
        "description": "# Retrieve zero or more main:staff_list objects",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/pagesize"
          },
          {
            "$ref": "#/parameters/offset"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/downloadName"
          },
          {
            "$ref": "#/parameters/deferred"
          },
          {
            "$ref": "#/parameters/inline"
          },
          {
            "$ref": "#/parameters/inlinelimit"
          },
          {
            "$ref": "#/parameters/chunksize"
          },
          {
            "$ref": "#/parameters/nometa"
          },
          {
            "$ref": "#/parameters/auth"
          },
          {
            "$ref": "#/parameters/sysfilter"
          },
          {
            "$ref": "#/parameters/sysorder"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or more main:staff_list objects",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/main:staff_list"
              }
            }
          },
          "500": {
            "description": "error return",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/main:film_in_stock": {
      "get": {
        "tags": [
          "Procedure main:film_in_stock"
        ],
        "summary": "Execute stored procedure main:film_in_stock",
        "description": "# Execute stored procedure main:film_in_stock",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "arg.p_film_id",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "arg.p_store_id",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "One main:film_in_stock result object",
            "schema": {
              "$ref": "#/definitions/result_main:film_in_stock"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Procedure main:film_in_stock"
        ],
        "summary": "Execute stored procedure main:film_in_stock zero or more times with different arguments",
        "description": "# Execute stored procedure main:film_in_stock zero or more times with different arguments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "p_film_id": {
                  "type": "number",
                  "format": "int32"
                },
                "p_store_id": {
                  "type": "number",
                  "format": "int32"
                }
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_in_stock result objects",
            "schema": {
              "$ref": "#/definitions/result_main:film_in_stock"
            }
          }
        }
      }
    },
    "/main:film_not_in_stock": {
      "get": {
        "tags": [
          "Procedure main:film_not_in_stock"
        ],
        "summary": "Execute stored procedure main:film_not_in_stock",
        "description": "# Execute stored procedure main:film_not_in_stock",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "arg.p_film_id",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "arg.p_store_id",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "One main:film_not_in_stock result object",
            "schema": {
              "$ref": "#/definitions/result_main:film_not_in_stock"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Procedure main:film_not_in_stock"
        ],
        "summary": "Execute stored procedure main:film_not_in_stock zero or more times with different arguments",
        "description": "# Execute stored procedure main:film_not_in_stock zero or more times with different arguments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "p_film_id": {
                  "type": "number",
                  "format": "int32"
                },
                "p_store_id": {
                  "type": "number",
                  "format": "int32"
                }
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:film_not_in_stock result objects",
            "schema": {
              "$ref": "#/definitions/result_main:film_not_in_stock"
            }
          }
        }
      }
    },
    "/main:get_customer_balance": {
      "get": {
        "tags": [
          "Procedure main:get_customer_balance"
        ],
        "summary": "Execute function main:get_customer_balance",
        "description": "# Execute function main:get_customer_balance",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "arg.p_customer_id",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "arg.p_effective_date",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "One main:get_customer_balance result object",
            "schema": {
              "$ref": "#/definitions/result_main:get_customer_balance"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Procedure main:get_customer_balance"
        ],
        "summary": "Execute function main:get_customer_balance zero or more times with different arguments",
        "description": "# Execute function main:get_customer_balance zero or more times with different arguments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "p_customer_id": {
                  "type": "number",
                  "format": "int32"
                },
                "p_effective_date": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:get_customer_balance result objects",
            "schema": {
              "$ref": "#/definitions/result_main:get_customer_balance"
            }
          }
        }
      }
    },
    "/main:inventory_held_by_customer": {
      "get": {
        "tags": [
          "Procedure main:inventory_held_by_customer"
        ],
        "summary": "Execute function main:inventory_held_by_customer",
        "description": "# Execute function main:inventory_held_by_customer",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "arg.p_inventory_id",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "One main:inventory_held_by_customer result object",
            "schema": {
              "$ref": "#/definitions/result_main:inventory_held_by_customer"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Procedure main:inventory_held_by_customer"
        ],
        "summary": "Execute function main:inventory_held_by_customer zero or more times with different arguments",
        "description": "# Execute function main:inventory_held_by_customer zero or more times with different arguments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "p_inventory_id": {
                  "type": "number",
                  "format": "int32"
                }
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:inventory_held_by_customer result objects",
            "schema": {
              "$ref": "#/definitions/result_main:inventory_held_by_customer"
            }
          }
        }
      }
    },
    "/main:inventory_in_stock": {
      "get": {
        "tags": [
          "Procedure main:inventory_in_stock"
        ],
        "summary": "Execute function main:inventory_in_stock",
        "description": "# Execute function main:inventory_in_stock",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "arg.p_inventory_id",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "One main:inventory_in_stock result object",
            "schema": {
              "$ref": "#/definitions/result_main:inventory_in_stock"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Procedure main:inventory_in_stock"
        ],
        "summary": "Execute function main:inventory_in_stock zero or more times with different arguments",
        "description": "# Execute function main:inventory_in_stock zero or more times with different arguments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "p_inventory_id": {
                  "type": "number",
                  "format": "int32"
                }
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:inventory_in_stock result objects",
            "schema": {
              "$ref": "#/definitions/result_main:inventory_in_stock"
            }
          }
        }
      }
    },
    "/main:rewards_report": {
      "get": {
        "tags": [
          "Procedure main:rewards_report"
        ],
        "summary": "Execute stored procedure main:rewards_report",
        "description": "# Execute stored procedure main:rewards_report",
        "produces": [
          "application/json",
          "application/xml",
          "text/xml",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "arg.min_monthly_purchases",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "number",
            "format": "int32"
          },
          {
            "name": "arg.min_dollar_amount_purchased",
            "in": "query",
            "description": "IN",
            "required": false,
            "type": "number"
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "One main:rewards_report result object",
            "schema": {
              "$ref": "#/definitions/result_main:rewards_report"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Procedure main:rewards_report"
        ],
        "summary": "Execute stored procedure main:rewards_report zero or more times with different arguments",
        "description": "# Execute stored procedure main:rewards_report zero or more times with different arguments",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "min_monthly_purchases": {
                  "type": "number",
                  "format": "int32"
                },
                "min_dollar_amount_purchased": {
                  "type": "number"
                }
              }
            }
          },
          {
            "$ref": "#/parameters/logging"
          },
          {
            "$ref": "#/parameters/procrowlimit"
          },
          {
            "$ref": "#/parameters/procinlinelimit"
          },
          {
            "$ref": "#/parameters/auth"
          }
        ],
        "responses": {
          "200": {
            "description": "Zero or one main:rewards_report result objects",
            "schema": {
              "$ref": "#/definitions/result_main:rewards_report"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "unspecifiedArrayItemObject": {
      "type": "object",
      "properties": {
      },
      "additionalProperties": true
    },
    "errorResponse": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorCode": {
          "type": "integer",
          "format": "int32"
        },
        "errorMessage": {
          "type": "string"
        },
        "helpUrl": {
          "type": "string"
        }
      },
      "required": [
        "statusCode",
        "errorCode",
        "errorMessage",
        "helpUrl"
      ]
    },
    "main:actor": {
      "type": "object",
      "properties": {
        "actor_id": {
          "type": "number",
          "format": "int32"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "actor_id",
        "first_name",
        "last_name",
        "last_update"
      ]
    },
    "main:address": {
      "type": "object",
      "properties": {
        "address_id": {
          "type": "number",
          "format": "int32"
        },
        "address": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "district": {
          "type": "string"
        },
        "city_id": {
          "type": "number",
          "format": "int32"
        },
        "postal_code": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "location": {
          "type": "string",
          "format": "binary"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "address_id",
        "address",
        "district",
        "city_id",
        "phone",
        "location",
        "last_update"
      ]
    },
    "main:category": {
      "type": "object",
      "properties": {
        "category_id": {
          "type": "number",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "category_id",
        "name",
        "last_update"
      ]
    },
    "main:city": {
      "type": "object",
      "properties": {
        "city_id": {
          "type": "number",
          "format": "int32"
        },
        "city": {
          "type": "string"
        },
        "country_id": {
          "type": "number",
          "format": "int32"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "city_id",
        "city",
        "country_id",
        "last_update"
      ]
    },
    "main:country": {
      "type": "object",
      "properties": {
        "country_id": {
          "type": "number",
          "format": "int32"
        },
        "country": {
          "type": "string"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "country_id",
        "country",
        "last_update"
      ]
    },
    "main:customer": {
      "type": "object",
      "properties": {
        "customer_id": {
          "type": "number",
          "format": "int32"
        },
        "store_id": {
          "type": "number",
          "format": "int32"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "address_id": {
          "type": "number",
          "format": "int32"
        },
        "active": {
          "type": "number",
          "format": "int32"
        },
        "create_date": {
          "type": "string",
          "format": "date-time"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "customer_id",
        "store_id",
        "first_name",
        "last_name",
        "address_id",
        "active",
        "create_date",
        "last_update"
      ]
    },
    "main:film": {
      "type": "object",
      "properties": {
        "film_id": {
          "type": "number",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "release_year": {
          "type": "number",
          "format": "int32"
        },
        "language_id": {
          "type": "number",
          "format": "int32"
        },
        "original_language_id": {
          "type": "number",
          "format": "int32"
        },
        "rental_duration": {
          "type": "number",
          "format": "int32"
        },
        "rental_rate": {
          "type": "number"
        },
        "length": {
          "type": "number",
          "format": "int32"
        },
        "replacement_cost": {
          "type": "number"
        },
        "rating": {
          "type": "string"
        },
        "special_features": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/unspecifiedArrayItemObject"
          }
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "film_id",
        "title",
        "language_id",
        "rental_duration",
        "rental_rate",
        "replacement_cost",
        "last_update"
      ]
    },
    "main:film_actor": {
      "type": "object",
      "properties": {
        "actor_id": {
          "type": "number",
          "format": "int32"
        },
        "film_id": {
          "type": "number",
          "format": "int32"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "actor_id",
        "film_id",
        "last_update"
      ]
    },
    "main:film_category": {
      "type": "object",
      "properties": {
        "film_id": {
          "type": "number",
          "format": "int32"
        },
        "category_id": {
          "type": "number",
          "format": "int32"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "film_id",
        "category_id",
        "last_update"
      ]
    },
    "main:film_text": {
      "type": "object",
      "properties": {
        "film_id": {
          "type": "number",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "film_id",
        "title"
      ]
    },
    "main:inventory": {
      "type": "object",
      "properties": {
        "inventory_id": {
          "type": "number",
          "format": "int32"
        },
        "film_id": {
          "type": "number",
          "format": "int32"
        },
        "store_id": {
          "type": "number",
          "format": "int32"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "inventory_id",
        "film_id",
        "store_id",
        "last_update"
      ]
    },
    "main:language": {
      "type": "object",
      "properties": {
        "language_id": {
          "type": "number",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "language_id",
        "name",
        "last_update"
      ]
    },
    "main:payment": {
      "type": "object",
      "properties": {
        "payment_id": {
          "type": "number",
          "format": "int32"
        },
        "customer_id": {
          "type": "number",
          "format": "int32"
        },
        "staff_id": {
          "type": "number",
          "format": "int32"
        },
        "rental_id": {
          "type": "number",
          "format": "int32"
        },
        "amount": {
          "type": "number"
        },
        "payment_date": {
          "type": "string",
          "format": "date-time"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "payment_id",
        "customer_id",
        "staff_id",
        "amount",
        "payment_date",
        "last_update"
      ]
    },
    "main:rental": {
      "type": "object",
      "properties": {
        "rental_id": {
          "type": "number",
          "format": "int32"
        },
        "rental_date": {
          "type": "string",
          "format": "date-time"
        },
        "inventory_id": {
          "type": "number",
          "format": "int32"
        },
        "customer_id": {
          "type": "number",
          "format": "int32"
        },
        "return_date": {
          "type": "string",
          "format": "date-time"
        },
        "staff_id": {
          "type": "number",
          "format": "int32"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "rental_id",
        "rental_date",
        "inventory_id",
        "customer_id",
        "staff_id",
        "last_update"
      ]
    },
    "main:staff": {
      "type": "object",
      "properties": {
        "staff_id": {
          "type": "number",
          "format": "int32"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "address_id": {
          "type": "number",
          "format": "int32"
        },
        "picture": {
          "type": "string",
          "format": "binary"
        },
        "email": {
          "type": "string"
        },
        "store_id": {
          "type": "number",
          "format": "int32"
        },
        "active": {
          "type": "number",
          "format": "int32"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "staff_id",
        "first_name",
        "last_name",
        "address_id",
        "store_id",
        "active",
        "username",
        "last_update"
      ]
    },
    "main:store": {
      "type": "object",
      "properties": {
        "store_id": {
          "type": "number",
          "format": "int32"
        },
        "manager_staff_id": {
          "type": "number",
          "format": "int32"
        },
        "address_id": {
          "type": "number",
          "format": "int32"
        },
        "last_update": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "store_id",
        "manager_staff_id",
        "address_id",
        "last_update"
      ]
    },
    "main:actor_info": {
      "type": "object",
      "properties": {
        "actor_id": {
          "type": "number",
          "format": "int32"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "film_info": {
          "type": "string"
        }
      },
      "required": [
        "actor_id",
        "first_name",
        "last_name"
      ]
    },
    "main:customer_list": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "zip code": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "SID": {
          "type": "number",
          "format": "int32"
        }
      },
      "required": [
        "ID",
        "address",
        "phone",
        "city",
        "country",
        "notes",
        "SID"
      ]
    },
    "main:film_list": {
      "type": "object",
      "properties": {
        "FID": {
          "type": "number",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "length": {
          "type": "number",
          "format": "int32"
        },
        "rating": {
          "type": "string"
        },
        "actors": {
          "type": "string"
        }
      },
      "required": [
        "category"
      ]
    },
    "main:nicer_but_slower_film_list": {
      "type": "object",
      "properties": {
        "FID": {
          "type": "number",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "price": {
          "type": "number"
        },
        "length": {
          "type": "number",
          "format": "int32"
        },
        "rating": {
          "type": "string"
        },
        "actors": {
          "type": "string"
        }
      },
      "required": [
        "category"
      ]
    },
    "main:sales_by_film_category": {
      "type": "object",
      "properties": {
        "category": {
          "type": "string"
        },
        "total_sales": {
          "type": "number"
        }
      },
      "required": [
        "category"
      ]
    },
    "main:sales_by_store": {
      "type": "object",
      "properties": {
        "store": {
          "type": "string"
        },
        "manager": {
          "type": "string"
        },
        "total_sales": {
          "type": "number"
        }
      }
    },
    "main:staff_list": {
      "type": "object",
      "properties": {
        "ID": {
          "type": "number",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "zip code": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "SID": {
          "type": "number",
          "format": "int32"
        }
      },
      "required": [
        "ID",
        "address",
        "phone",
        "city",
        "country",
        "SID"
      ]
    },
    "result_main:film_in_stock": {
      "type": "object",
      "properties": {
        "arg": {
          "type": "object",
          "properties": {
            "p_film_id": {
              "type": "number",
              "format": "int32"
            },
            "p_store_id": {
              "type": "number",
              "format": "int32"
            },
            "p_film_count": {
              "type": "number",
              "format": "int32"
            }
          }
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "truncated": {
                "type": "boolean"
              },
              "rowCount": {
                "type": "integer",
                "format": "int32"
              },
              "columnMeta": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              },
              "rows": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              }
            },
            "required": [
              "truncated",
              "rowCount",
              "columnMeta",
              "rows"
            ],
            "additionalProperties": true
          }
        },
        "updateCount": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "arg",
        "result",
        "updateCount"
      ]
    },
    "result_main:film_not_in_stock": {
      "type": "object",
      "properties": {
        "arg": {
          "type": "object",
          "properties": {
            "p_film_id": {
              "type": "number",
              "format": "int32"
            },
            "p_store_id": {
              "type": "number",
              "format": "int32"
            },
            "p_film_count": {
              "type": "number",
              "format": "int32"
            }
          }
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "truncated": {
                "type": "boolean"
              },
              "rowCount": {
                "type": "integer",
                "format": "int32"
              },
              "columnMeta": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              },
              "rows": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              }
            },
            "required": [
              "truncated",
              "rowCount",
              "columnMeta",
              "rows"
            ],
            "additionalProperties": true
          }
        },
        "updateCount": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "arg",
        "result",
        "updateCount"
      ]
    },
    "result_main:get_customer_balance": {
      "type": "object",
      "properties": {
        "arg": {
          "type": "object",
          "properties": {
            "FUNCTION_RETURN_VALUE": {
              "type": "number"
            },
            "p_customer_id": {
              "type": "number",
              "format": "int32"
            },
            "p_effective_date": {
              "type": "string",
              "format": "date-time"
            }
          }
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "truncated": {
                "type": "boolean"
              },
              "rowCount": {
                "type": "integer",
                "format": "int32"
              },
              "columnMeta": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              },
              "rows": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              }
            },
            "required": [
              "truncated",
              "rowCount",
              "columnMeta",
              "rows"
            ],
            "additionalProperties": true
          }
        },
        "updateCount": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "arg",
        "result",
        "updateCount"
      ]
    },
    "result_main:inventory_held_by_customer": {
      "type": "object",
      "properties": {
        "arg": {
          "type": "object",
          "properties": {
            "FUNCTION_RETURN_VALUE": {
              "type": "number",
              "format": "int32"
            },
            "p_inventory_id": {
              "type": "number",
              "format": "int32"
            }
          }
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "truncated": {
                "type": "boolean"
              },
              "rowCount": {
                "type": "integer",
                "format": "int32"
              },
              "columnMeta": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              },
              "rows": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              }
            },
            "required": [
              "truncated",
              "rowCount",
              "columnMeta",
              "rows"
            ],
            "additionalProperties": true
          }
        },
        "updateCount": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "arg",
        "result",
        "updateCount"
      ]
    },
    "result_main:inventory_in_stock": {
      "type": "object",
      "properties": {
        "arg": {
          "type": "object",
          "properties": {
            "FUNCTION_RETURN_VALUE": {
              "type": "number",
              "format": "int32"
            },
            "p_inventory_id": {
              "type": "number",
              "format": "int32"
            }
          }
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "truncated": {
                "type": "boolean"
              },
              "rowCount": {
                "type": "integer",
                "format": "int32"
              },
              "columnMeta": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              },
              "rows": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              }
            },
            "required": [
              "truncated",
              "rowCount",
              "columnMeta",
              "rows"
            ],
            "additionalProperties": true
          }
        },
        "updateCount": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "arg",
        "result",
        "updateCount"
      ]
    },
    "result_main:rewards_report": {
      "type": "object",
      "properties": {
        "arg": {
          "type": "object",
          "properties": {
            "min_monthly_purchases": {
              "type": "number",
              "format": "int32"
            },
            "min_dollar_amount_purchased": {
              "type": "number"
            },
            "count_rewardees": {
              "type": "number",
              "format": "int32"
            }
          }
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "truncated": {
                "type": "boolean"
              },
              "rowCount": {
                "type": "integer",
                "format": "int32"
              },
              "columnMeta": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              },
              "rows": {
                "type": "object",
                "properties": {
                },
                "additionalProperties": true
              }
            },
            "required": [
              "truncated",
              "rowCount",
              "columnMeta",
              "rows"
            ],
            "additionalProperties": true
          }
        },
        "updateCount": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "required": [
        "arg",
        "result",
        "updateCount"
      ]
    }
  },
  "parameters": {
    "auth": {
      "name": "auth",
      "description": "Auth Token: this is a convenience so you can do GET etc. with the value in a URL",
      "type": "string",
      "in": "query",
      "allowEmptyValue": false
    },
    "sysfilter": {
      "name": "sysfilter",
      "description": "Structured search criteria",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "allowEmptyValue": false
    },
    "sysorder": {
      "name": "sysorder",
      "description": "Structured sort",
      "in": "query",
      "required": false,
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "allowEmptyValue": false
    },
    "checksum": {
      "name": "checksum",
      "description": "The checksum for the object to deleted (can be _override_ to bypass optimistic locking",
      "in": "query",
      "type": "string",
      "required": true,
      "allowEmptyValue": false
    },
    "txsummary": {
      "name": "txsummary",
      "description": "If true, the response will include a description of all database objects updated during the transaction.  Default value is 'true'",
      "in": "query",
      "type": "boolean",
      "required": false,
      "allowEmptyValue": false
    },
    "rulesummary": {
      "name": "rulesummary",
      "description": "If true. the response will include a description of all the rules executed during the transaction",
      "in": "query",
      "type": "boolean",
      "required": false,
      "allowEmptyValue": false
    },
    "logging": {
      "name": "logging",
      "description": "Sets the logging levels for this request only",
      "in": "query",
      "type": "string",
      "required": false,
      "allowEmptyValue": false
    },
    "downloadName": {
      "name": "downloadName",
      "description": "Used to specified download name.",
      "in": "query",
      "type": "string",
      "required": false,
      "allowEmptyValue": false
    },
    "pagesize": {
      "name": "pagesize",
      "description": "Sets the number of objects to retrieve in one batch. The default is 20. You cannot make this number smaller than 1, or larger than 5000.",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "required": false,
      "allowEmptyValue": false
    },
    "offset": {
      "name": "offset",
      "description": "This is generated internally for pagination in next_batch links. It is not recommended to set this manually, as security and JavaScript filters can make this value jump by more than pagesize for each page.",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "required": false,
      "allowEmptyValue": false
    },
    "deferred": {
      "name": "deferred",
      "description": "Comma-separated list of Resource.attribute names that will be returned as deferred links. This applies only to *BINARY* and *STRING* data. _'deferred'_ values take precedence over _'inline'_ and _'inlinelimit'_ values. The value is also used for transaction summaries, but database names must be used.",
      "in": "query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "required": false,
      "allowEmptyValue": false
    },
    "inline": {
      "name": "inline",
      "description": "Comma-separated list of Resource.attribute names that will be returned as inline values. This applies only to *BINARY* and *STRING* data. _'deferred'_ values take precedence over _'inline'_ and _'inlinelimit'_ values. The value is also used for transaction summaries, but database names must be used.",
      "in": "query",
      "type": "array",
      "items": {
        "type": "string"
      },
      "collectionFormat": "multi",
      "required": false,
      "allowEmptyValue": false
    },
    "inlinelimit": {
      "name": "inlinelimit",
      "description": "Overrides the project setting. Number of characters or bytes used to decide whether a value is returned inline in the JSON or deferred to a link for *BINARY* or *STRING* data. Both _'deferred'_ and _'inline'_ take precedence over _'inlinelimit'_ values. A  value of 0 will result in ALL non-null values returned as a link. A value of -1 will result in all values returned as a link.",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "required": false,
      "allowEmptyValue": false
    },
    "procrowlimit": {
      "name": "procrowlimit",
      "description": "Overrides the project setting. Number of rows to return from each result set produced (if any) by a PROCEDURE. Any further rows will be discard and cannot be retrieved. A special value is returned to tell the caller if this happens",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "required": false,
      "allowEmptyValue": false
    },
    "procinlinelimit": {
      "name": "procinlinelimit",
      "description": "Overrides the project setting. See _'inlinelimit'_, but applies to values returned by procedure. Values exceeding this limit cannot be obtained later.",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "required": false,
      "allowEmptyValue": false
    },
    "chunksize": {
      "name": "chunksize",
      "description": "A specialized performance value used to control query generation for contained resources",
      "in": "query",
      "type": "integer",
      "format": "int32",
      "required": false,
      "allowEmptyValue": false
    },
    "ignoredeleted": {
      "name": "ignoredeleted",
      "description": "The optional parameter 'ignoredeleted' can be added to control the response when the resource is not found. Normally, a DELETE on a non-existent resource results in a 404 - No such object error message. While this is correctly 'RESTful' and idempotent, it may not be the wanted result. For these times, 'ignoredeleted' parameter may be added. The call will still be idempotent, but will return 200 with an empty txsummary.",
      "in": "query",
      "type": "boolean",
      "required": false,
      "allowEmptyValue": true
    },
    "nometa": {
      "name": "nometa",
      "description": "Remove the Meta Data from GET requests, specify true or false or leave empty for default value of true",
      "in": "query",
      "type": "boolean",
      "required": false,
      "allowEmptyValue": true
    }
  },
  "responses": {
  }
}
